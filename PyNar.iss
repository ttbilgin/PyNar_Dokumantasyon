; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

#define MyAppName "Pynar Python Editörü"
#define MyAppVersion "1.0.0"
#define MyAppPublisher "Türkçe Python Editörü Geliştirme Projesi"
#define MyAppExeName "pynar.exe"
#define MyAppAssocName MyAppName + " File"
#define MyAppAssocExt ".py"
#define MyAppAssocKey StringChange(MyAppAssocName, " ", "") + MyAppAssocExt

[Setup]
; NOTE: The value of AppId uniquely identifies this application. Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)
AppId={{8BBC9396-C677-40CE-9579-65A974527B99}
AppName={#MyAppName}
AppVersion={#MyAppVersion}
;AppVerName={#MyAppName} {#MyAppVersion}
AppPublisher={#MyAppPublisher}
DefaultDirName={userappdata}\{#MyAppName}
ChangesAssociations=yes
DefaultGroupName={#MyAppName}
AllowNoIcons=yes
; Remove the following line to run in administrative install mode (install for all users.)
PrivilegesRequired=lowest
OutputBaseFilename=PynarKurulum
Compression=lzma
SolidCompression=yes
WizardStyle=modern
DisableWelcomePage=no
DisableDirPage=no
UsePreviousTasks=no

[Languages]
Name: "english"; MessagesFile: "compiler:Default.isl"
Name: "turkish"; MessagesFile: "compiler:Languages\Turkish.isl"

[Tasks]
Name: "desktopicon"; Description: "{cm:CreateDesktopIcon}"; GroupDescription: "{cm:AdditionalIcons}"

[Types]
Name: "typical"; Description: "Typical"
Name: "custom"; Description: "Custom"; Flags: iscustom

[Components]
Name: "Pynar"; Description: "PyNar uygulaması"; Types: typical custom; Flags: fixed
Name: "Python"; Description: "Python 3.10.0 32 bit"; Types: typical

[Dirs]
Name: "{app}\Log"

[Files]
Source: "C:\pynar\*"; DestDir: "{app}\"; Flags: ignoreversion recursesubdirs createallsubdirs; Components: Pynar
; NOTE: Don't use "Flags: ignoreversion" on any shared system files
Source: "C:\pythoninstall.exe"; DestDir: "{tmp}"; Flags: ignoreversion; Components: Python

[Registry]
Root: HKA; Subkey: "Software\Classes\{#MyAppAssocExt}"; ValueType: string; ValueName: ""; ValueData: "{#MyAppAssocKey}"; Flags: uninsdeletevalue
Root: HKA; Subkey: "Software\Classes\{#MyAppAssocExt}\OpenWithProgids"; ValueType: string; ValueName: "{#MyAppAssocKey}"; ValueData: ""; Flags: uninsdeletevalue
Root: HKA; Subkey: "Software\Classes\{#MyAppAssocKey}"; ValueType: string; ValueName: ""; ValueData: "{#MyAppAssocName}"; Flags: uninsdeletekey
Root: HKA; Subkey: "Software\Classes\{#MyAppAssocKey}\DefaultIcon"; ValueType: string; ValueName: ""; ValueData: "{app}\{#MyAppExeName},0"
Root: HKA; Subkey: "Software\Classes\{#MyAppAssocKey}\shell\open\command"; ValueType: string; ValueName: ""; ValueData: """{app}\{#MyAppExeName}"" ""%1"""

[Icons]
Name: "{group}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"
Name: "{group}\{cm:UninstallProgram,{#MyAppName}}"; Filename: "{uninstallexe}"
Name: "{autodesktop}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"; Tasks: desktopicon

[Run]
Filename: "{app}\{#MyAppExeName}"; Description: "{cm:LaunchProgram,{#StringChange(MyAppName, '&', '&&')}}"; Flags: nowait postinstall skipifsilent unchecked; Components: Python; Check: pythoninstall 

[Code]
Function pythoninstall(): Boolean;
var
  Something : Integer;
begin
  if (Exec(ExpandConstant('{tmp}\pythoninstall.exe'), '/quiet InstallLauncherAllUsers=0 InstallAllUsers=0 Include_test=0 SimpleInstall=1 AssociateFiles=0 PrependPath=1', '', SW_SHOW, ewWaitUntilTerminated, Something)) then
  begin  
    Result:=False;
  end
  else begin
    Msgbox('Python yüklenemedi.', mbInformation, MB_OK);
    Result:=False;
  end;
end;
